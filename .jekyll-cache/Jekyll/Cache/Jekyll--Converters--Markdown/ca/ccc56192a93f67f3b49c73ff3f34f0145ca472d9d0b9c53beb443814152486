I"(<p><a href="https://gitter.im/Khan/KaTeX?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge"><img src="https://badges.gitter.im/Join%20Chat.svg" alt="Join the chat at https://gitter.im/Khan/KaTeX" /></a></p>

<p>KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.</p>

<ul>
  <li><strong>Fast:</strong> KaTeX renders its math synchronously and doesn’t need to reflow the page. See how it compares to a competitor in <a href="http://jsperf.com/katex-vs-mathjax/">this speed test</a>.</li>
  <li><strong>Print quality:</strong> KaTeX’s layout is based on Donald Knuth’s TeX, the gold standard for math typesetting.</li>
  <li><strong>Self contained:</strong> KaTeX has no dependencies and can easily be bundled with your website resources.</li>
  <li><strong>Server side rendering:</strong> KaTeX produces the same output regardless of browser or environment, so you can pre-render expressions using Node.js and send them as plain HTML.</li>
</ul>

<p>KaTeX supports all major browsers, including Chrome, Safari, Firefox, Opera, and IE 8 - IE 11.  A list of supported  commands can be on the <a href="https://github.com/Khan/KaTeX/wiki/Function-Support-in-KaTeX">wiki</a>.</p>

<h2 id="usage">Usage</h2>

<p>You can <a href="https://github.com/khan/katex/releases">download KaTeX</a> and host it on your server or include the <code class="language-plaintext highlighter-rouge">katex.min.js</code> and <code class="language-plaintext highlighter-rouge">katex.min.css</code> files on your page directly from a CDN:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css"</span><span class="nt">&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<h4 id="in-browser-rendering">In-browser rendering</h4>

<p>Call <code class="language-plaintext highlighter-rouge">katex.render</code> with a TeX expression and a DOM element to render into:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">katex</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="dl">"</span><span class="s2">c = </span><span class="se">\\</span><span class="s2">pm</span><span class="se">\\</span><span class="s2">sqrt{a^2 + b^2}</span><span class="dl">"</span><span class="p">,</span> <span class="nx">element</span><span class="p">);</span>
</code></pre></div></div>

<p>If KaTeX can’t parse the expression, it throws a <code class="language-plaintext highlighter-rouge">katex.ParseError</code> error.</p>

<h4 id="server-side-rendering-or-rendering-to-a-string">Server side rendering or rendering to a string</h4>

<p>To generate HTML on the server or to generate an HTML string of the rendered math, you can use <code class="language-plaintext highlighter-rouge">katex.renderToString</code>:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="nx">katex</span><span class="p">.</span><span class="nx">renderToString</span><span class="p">(</span><span class="dl">"</span><span class="s2">c = </span><span class="se">\\</span><span class="s2">pm</span><span class="se">\\</span><span class="s2">sqrt{a^2 + b^2}</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// '&lt;span class="katex"&gt;...&lt;/span&gt;'</span>
</code></pre></div></div>

<p>Make sure to include the CSS and font files, but there is no need to include the JavaScript. Like <code class="language-plaintext highlighter-rouge">render</code>, <code class="language-plaintext highlighter-rouge">renderToString</code> throws if it can’t parse the expression.</p>

<h4 id="rendering-options">Rendering options</h4>

<p>You can provide an object of options as the last argument to <code class="language-plaintext highlighter-rouge">katex.render</code> and <code class="language-plaintext highlighter-rouge">katex.renderToString</code>. Available options are:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">displayMode</code>: <code class="language-plaintext highlighter-rouge">boolean</code>. If <code class="language-plaintext highlighter-rouge">true</code> the math will be rendered in display mode, which will put the math in display style (so <code class="language-plaintext highlighter-rouge">\int</code> and <code class="language-plaintext highlighter-rouge">\sum</code> are large, for example), and will center the math on the page on its own line. If <code class="language-plaintext highlighter-rouge">false</code> the math will be rendered in inline mode. (default: <code class="language-plaintext highlighter-rouge">false</code>)</li>
  <li><code class="language-plaintext highlighter-rouge">throwOnError</code>: <code class="language-plaintext highlighter-rouge">boolean</code>. If <code class="language-plaintext highlighter-rouge">true</code>, KaTeX will throw a <code class="language-plaintext highlighter-rouge">ParseError</code> when it encounters an unsupported command. If <code class="language-plaintext highlighter-rouge">false</code>, KaTeX will render the unsupported command as text in the color given by <code class="language-plaintext highlighter-rouge">errorColor</code>. (default: <code class="language-plaintext highlighter-rouge">true</code>)</li>
  <li><code class="language-plaintext highlighter-rouge">errorColor</code>: <code class="language-plaintext highlighter-rouge">string</code>. A color string given in the format <code class="language-plaintext highlighter-rouge">"#XXX"</code> or <code class="language-plaintext highlighter-rouge">"#XXXXXX"</code>. This option determines the color which unsupported commands are rendered in. (default: <code class="language-plaintext highlighter-rouge">#cc0000</code>)</li>
</ul>

<p>For example:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">katex</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="dl">"</span><span class="s2">c = </span><span class="se">\\</span><span class="s2">pm</span><span class="se">\\</span><span class="s2">sqrt{a^2 + b^2}</span><span class="dl">"</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="p">{</span> <span class="na">displayMode</span><span class="p">:</span> <span class="kc">true</span> <span class="p">});</span>
</code></pre></div></div>

<h4 id="automatic-rendering-of-math-on-a-page">Automatic rendering of math on a page</h4>

<p>Math on the page can be automatically rendered using the auto-render extension. See <a href="contrib/auto-render/README.md">the Auto-render README</a> for more information.</p>

<h2 id="contributing">Contributing</h2>

<p>See <a href="CONTRIBUTING.md">CONTRIBUTING.md</a></p>

<h2 id="license">License</h2>

<p>KaTeX is licensed under the <a href="http://opensource.org/licenses/MIT">MIT License</a>.</p>
:ET